# -*- coding: utf-8 -*-
# Generated by Django 1.11.28 on 2020-07-22 02:30
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import osf.migrations.utils.utils
import osf.utils.migrations


class Migration(migrations.Migration):

    replaces = [('osf', '0172_ensure_schemas'), ('osf', '0173_ensure_schemas'), ('osf', '0174_add_ab_testing_home_page_version_b_flag'), ('osf', '0175_pagecounter_schema'), ('osf', '0176_pagecounter_data'), ('osf', '0177_pagecounter_index'), ('osf', '0178_apioauth2scope_is_public'), ('osf', '0179_apioauth2personaltoken_scopes_temp'), ('osf', '0180_finalize_token_scopes_mig')]

    dependencies = [
        ('osf', '0171_add_registration_files_count'),
    ]

    operations = [
        migrations.RunPython(
            code=osf.utils.migrations.ensure_schemas,
            reverse_code=osf.utils.migrations.ensure_schemas,
        ),
        migrations.RunPython(
            code=osf.utils.migrations.ensure_schemas,
            reverse_code=osf.utils.migrations.ensure_schemas,
        ),
        osf.utils.migrations.AddWaffleFlags(
            flag_names=['ab_testing_home_page_version_b'],
        ),
        migrations.AddField(
            model_name='pagecounter',
            name='action',
            field=models.CharField(blank=True, max_length=128, null=True),
        ),
        migrations.AddField(
            model_name='pagecounter',
            name='file',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pagecounters', to='osf.BaseFileNode'),
        ),
        migrations.AddField(
            model_name='pagecounter',
            name='resource',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pagecounters', to='osf.Guid'),
        ),
        migrations.AddField(
            model_name='pagecounter',
            name='version',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.RunSQL(
            sql="\n    UPDATE osf_pagecounter PC\n    SET\n        action = split_part(PC._id, ':', 1),\n        resource_id = Guid.id,\n        file_id = File.id,\n        version = NULLIF(split_part(PC._id, ':', 4), '')::int\n    FROM osf_guid Guid, osf_basefilenode File\n        WHERE\n              Guid._id = split_part(PC._id, ':', 2) AND\n              File._id = split_part(PC._id, ':', 3) AND\n              PC.id in (\n                  select PC.id from osf_pagecounter PC\n                      INNER JOIN osf_guid Guid on Guid._id = split_part(PC._id, ':', 2)\n                      INNER JOIN osf_basefilenode File on File._id = split_part(PC._id, ':', 3)\n                  WHERE (PC.resource_id IS NULL OR PC.file_id IS NULL)\n );",
            reverse_sql="\nUPDATE osf_pagecounter PC\nSET\n    resource_id = NULL,\n    file_id = NULL,\n    version = NULL,\n    action = NULL\nWHERE PC.id IN (\n    SELECT PC.id FROM osf_pagecounter PC\n        INNER JOIN osf_guid Guid on Guid._id = split_part(PC._id, ':', 2)\n        INNER JOIN osf_basefilenode File on File._id = split_part(PC._id, ':', 3)\n );",
        ),
        migrations.RunSQL(
            sql=['CREATE INDEX CONCURRENTLY page_counter_idx ON osf_pagecounter (action, resource_id, file_id, version);'],
            reverse_sql=['DROP INDEX IF EXISTS page_counter_idx, RESTRICT;'],
        ),
        migrations.AddField(
            model_name='apioauth2scope',
            name='is_public',
            field=models.BooleanField(db_index=True, default=True),
        ),
        migrations.AlterField(
            model_name='apioauth2personaltoken',
            name='scopes',
            field=models.CharField(max_length=300, null=True),
        ),
        migrations.AddField(
            model_name='apioauth2personaltoken',
            name='scopes_temp',
            field=models.ManyToManyField(related_name='tokens', to='osf.ApiOAuth2Scope'),
        ),
        migrations.RunPython(
            code=osf.migrations.utils.utils.migrate_scopes_from_char_to_m2m,
            reverse_code=osf.migrations.utils.utils.remove_m2m_scopes,
        ),
        migrations.RemoveField(
            model_name='apioauth2personaltoken',
            name='scopes',
        ),
        migrations.RenameField(
            model_name='apioauth2personaltoken',
            old_name='scopes_temp',
            new_name='scopes',
        ),
    ]
